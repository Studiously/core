// Code generated by goagen v1.2.0-dirty, DO NOT EDIT.
//
// API "studiously": question Resource Client
//
// Command:
// $ goagen
// --design=github.com/studiously/core/design
// --out=$(GOPATH)/src/github.com/studiously/core
// --version=v1.2.0-dirty

package client

import (
	"context"
	"fmt"
	uuid "github.com/goadesign/goa/uuid"
	"net/http"
	"net/url"
)

// ShowQuestionPath computes a request path to the show action of question.
func ShowQuestionPath(questionID uuid.UUID) string {
	param0 := questionID.String()

	return fmt.Sprintf("/questions/%s", param0)
}

// Get a question by ID
func (c *Client) ShowQuestion(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewShowQuestionRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewShowQuestionRequest create the request corresponding to the show action endpoint of the question resource.
func (c *Client) NewShowQuestionRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
